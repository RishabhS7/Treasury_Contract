{
	"id": "2c52df49f3ac8c27f24cb08f858476a2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TreasuryContract/lib/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.19;\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable {\r\n    address payable public owner;\r\n    address payable public newOwner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(payable(msg.sender));\r\n    }\r\n\r\n    function _transferOwnership(address payable _whom) internal {\r\n        emit OwnershipTransferred(owner, _whom);\r\n        owner = _whom;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner == msg.sender, \"ERR_AUTHORIZED_ADDRESS_ONLY\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address payable _newOwner) external onlyOwner {\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    function acceptOwnership() external returns (bool) {\r\n        require(msg.sender == newOwner, \"ERR_ONLY_NEW_OWNER\");\r\n        owner = newOwner;\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        newOwner = payable(address(0));\r\n        return true;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TreasuryContract/lib/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TreasuryContract/lib/Ownable.sol\":570:1830  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":860:932  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":885:924  _transferOwnership(payable(msg.sender)) */\n  tag_4\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":912:922  msg.sender */\n  caller\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":885:903  _transferOwnership */\n  shl(0x20, tag_5)\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":885:924  _transferOwnership(payable(msg.sender)) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":570:1830  contract Ownable {... */\n  jump(tag_6)\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":940:1082  function _transferOwnership(address payable _whom) internal {... */\ntag_5:\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1044:1049  _whom */\n  dup1\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1016:1050  OwnershipTransferred(owner, _whom) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1037:1042  owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1016:1050  OwnershipTransferred(owner, _whom) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1069:1074  _whom */\n  dup1\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1061:1066  owner */\n  0x00\n  dup1\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":1061:1074  owner = _whom */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":940:1082  function _transferOwnership(address payable _whom) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/TreasuryContract/lib/Ownable.sol\":570:1830  contract Ownable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":570:1830  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1561:1827  function acceptOwnership() external returns (bool) {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":594:622  address payable public owner */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":629:660  address payable public newOwner */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1441:1553  function transferOwnership(address payable _newOwner) external onlyOwner {... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1561:1827  function acceptOwnership() external returns (bool) {... */\n    tag_8:\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1606:1610  bool */\n      0x00\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1645:1653  newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1631:1653  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1631:1641  msg.sender */\n      caller\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1631:1653  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1623:1676  require(msg.sender == newOwner, \"ERR_ONLY_NEW_OWNER\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1695:1703  newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1687:1692  owner */\n      0x00\n      dup1\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1687:1703  owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1747:1755  newOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1719:1756  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1740:1745  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1719:1756  OwnershipTransferred(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1794:1795  0 */\n      0x00\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1767:1775  newOwner */\n      0x01\n      0x00\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1767:1797  newOwner = payable(address(0)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1815:1819  true */\n      0x01\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1808:1819  return true */\n      swap1\n      pop\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1561:1827  function acceptOwnership() external returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":594:622  address payable public owner */\n    tag_12:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":629:660  address payable public newOwner */\n    tag_16:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1441:1553  function transferOwnership(address payable _newOwner) external onlyOwner {... */\n    tag_21:\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1224:1234  msg.sender */\n      caller\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1215:1234  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1215:1220  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1215:1234  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1207:1266  require(owner == msg.sender, \"ERR_AUTHORIZED_ADDRESS_ONLY\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1536:1545  _newOwner */\n      dup1\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1525:1533  newOwner */\n      0x01\n      0x00\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1525:1545  newOwner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TreasuryContract/lib/Ownable.sol\":1441:1553  function transferOwnership(address payable _newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_31:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_32:\n        /* \"#utility.yul\":184:205   */\n      tag_49\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_10:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_51\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_32\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_33:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:670   */\n    tag_34:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_54\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_33\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:818   */\n    tag_35:\n        /* \"#utility.yul\":779:811   */\n      tag_56\n        /* \"#utility.yul\":805:810   */\n      dup2\n        /* \"#utility.yul\":779:811   */\n      tag_34\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":774:777   */\n      dup3\n        /* \"#utility.yul\":767:812   */\n      mstore\n        /* \"#utility.yul\":676:818   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":824:1078   */\n    tag_14:\n        /* \"#utility.yul\":933:937   */\n      0x00\n        /* \"#utility.yul\":971:973   */\n      0x20\n        /* \"#utility.yul\":960:969   */\n      dup3\n        /* \"#utility.yul\":956:974   */\n      add\n        /* \"#utility.yul\":948:974   */\n      swap1\n      pop\n        /* \"#utility.yul\":984:1071   */\n      tag_58\n        /* \"#utility.yul\":1068:1069   */\n      0x00\n        /* \"#utility.yul\":1057:1066   */\n      dup4\n        /* \"#utility.yul\":1053:1070   */\n      add\n        /* \"#utility.yul\":1044:1050   */\n      dup5\n        /* \"#utility.yul\":984:1071   */\n      tag_35\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":824:1078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1165:1282   */\n    tag_37:\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1271:1272   */\n      dup1\n        /* \"#utility.yul\":1264:1276   */\n      revert\n        /* \"#utility.yul\":1411:1549   */\n    tag_39:\n        /* \"#utility.yul\":1492:1524   */\n      tag_63\n        /* \"#utility.yul\":1518:1523   */\n      dup2\n        /* \"#utility.yul\":1492:1524   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1485:1490   */\n      dup2\n        /* \"#utility.yul\":1482:1525   */\n      eq\n        /* \"#utility.yul\":1472:1543   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1472:1543   */\n    tag_64:\n        /* \"#utility.yul\":1411:1549   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1555:1710   */\n    tag_40:\n        /* \"#utility.yul\":1609:1614   */\n      0x00\n        /* \"#utility.yul\":1647:1653   */\n      dup2\n        /* \"#utility.yul\":1634:1654   */\n      calldataload\n        /* \"#utility.yul\":1625:1654   */\n      swap1\n      pop\n        /* \"#utility.yul\":1663:1704   */\n      tag_66\n        /* \"#utility.yul\":1698:1703   */\n      dup2\n        /* \"#utility.yul\":1663:1704   */\n      tag_39\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1555:1710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:2061   */\n    tag_20:\n        /* \"#utility.yul\":1783:1789   */\n      0x00\n        /* \"#utility.yul\":1832:1834   */\n      0x20\n        /* \"#utility.yul\":1820:1829   */\n      dup3\n        /* \"#utility.yul\":1811:1818   */\n      dup5\n        /* \"#utility.yul\":1807:1830   */\n      sub\n        /* \"#utility.yul\":1803:1835   */\n      slt\n        /* \"#utility.yul\":1800:1919   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1838:1917   */\n      tag_69\n      tag_37\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1800:1919   */\n    tag_68:\n        /* \"#utility.yul\":1958:1959   */\n      0x00\n        /* \"#utility.yul\":1983:2044   */\n      tag_70\n        /* \"#utility.yul\":2036:2043   */\n      dup5\n        /* \"#utility.yul\":2027:2033   */\n      dup3\n        /* \"#utility.yul\":2016:2025   */\n      dup6\n        /* \"#utility.yul\":2012:2034   */\n      add\n        /* \"#utility.yul\":1983:2044   */\n      tag_40\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1973:2044   */\n      swap2\n      pop\n        /* \"#utility.yul\":1929:2054   */\n      pop\n        /* \"#utility.yul\":1716:2061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2067:2236   */\n    tag_41:\n        /* \"#utility.yul\":2151:2162   */\n      0x00\n        /* \"#utility.yul\":2185:2191   */\n      dup3\n        /* \"#utility.yul\":2180:2183   */\n      dup3\n        /* \"#utility.yul\":2173:2192   */\n      mstore\n        /* \"#utility.yul\":2225:2229   */\n      0x20\n        /* \"#utility.yul\":2220:2223   */\n      dup3\n        /* \"#utility.yul\":2216:2230   */\n      add\n        /* \"#utility.yul\":2201:2230   */\n      swap1\n      pop\n        /* \"#utility.yul\":2067:2236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2242:2410   */\n    tag_42:\n        /* \"#utility.yul\":2382:2402   */\n      0x4552525f4f4e4c595f4e45575f4f574e45520000000000000000000000000000\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2370:2376   */\n      dup3\n        /* \"#utility.yul\":2366:2380   */\n      add\n        /* \"#utility.yul\":2359:2403   */\n      mstore\n        /* \"#utility.yul\":2242:2410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2416:2782   */\n    tag_43:\n        /* \"#utility.yul\":2558:2561   */\n      0x00\n        /* \"#utility.yul\":2579:2646   */\n      tag_74\n        /* \"#utility.yul\":2643:2645   */\n      0x12\n        /* \"#utility.yul\":2638:2641   */\n      dup4\n        /* \"#utility.yul\":2579:2646   */\n      tag_41\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2572:2646   */\n      swap2\n      pop\n        /* \"#utility.yul\":2655:2748   */\n      tag_75\n        /* \"#utility.yul\":2744:2747   */\n      dup3\n        /* \"#utility.yul\":2655:2748   */\n      tag_42\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2773:2775   */\n      0x20\n        /* \"#utility.yul\":2768:2771   */\n      dup3\n        /* \"#utility.yul\":2764:2776   */\n      add\n        /* \"#utility.yul\":2757:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2788:3207   */\n    tag_25:\n        /* \"#utility.yul\":2954:2958   */\n      0x00\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"#utility.yul\":2981:2990   */\n      dup3\n        /* \"#utility.yul\":2977:2995   */\n      add\n        /* \"#utility.yul\":2969:2995   */\n      swap1\n      pop\n        /* \"#utility.yul\":3041:3050   */\n      dup2\n        /* \"#utility.yul\":3035:3039   */\n      dup2\n        /* \"#utility.yul\":3031:3051   */\n      sub\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3016:3025   */\n      dup4\n        /* \"#utility.yul\":3012:3029   */\n      add\n        /* \"#utility.yul\":3005:3052   */\n      mstore\n        /* \"#utility.yul\":3069:3200   */\n      tag_77\n        /* \"#utility.yul\":3195:3199   */\n      dup2\n        /* \"#utility.yul\":3069:3200   */\n      tag_43\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3061:3200   */\n      swap1\n      pop\n        /* \"#utility.yul\":2788:3207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3390   */\n    tag_44:\n        /* \"#utility.yul\":3353:3382   */\n      0x4552525f415554484f52495a45445f414444524553535f4f4e4c590000000000\n        /* \"#utility.yul\":3349:3350   */\n      0x00\n        /* \"#utility.yul\":3341:3347   */\n      dup3\n        /* \"#utility.yul\":3337:3351   */\n      add\n        /* \"#utility.yul\":3330:3383   */\n      mstore\n        /* \"#utility.yul\":3213:3390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3396:3762   */\n    tag_45:\n        /* \"#utility.yul\":3538:3541   */\n      0x00\n        /* \"#utility.yul\":3559:3626   */\n      tag_80\n        /* \"#utility.yul\":3623:3625   */\n      0x1b\n        /* \"#utility.yul\":3618:3621   */\n      dup4\n        /* \"#utility.yul\":3559:3626   */\n      tag_41\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3552:3626   */\n      swap2\n      pop\n        /* \"#utility.yul\":3635:3728   */\n      tag_81\n        /* \"#utility.yul\":3724:3727   */\n      dup3\n        /* \"#utility.yul\":3635:3728   */\n      tag_44\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3753:3755   */\n      0x20\n        /* \"#utility.yul\":3748:3751   */\n      dup3\n        /* \"#utility.yul\":3744:3756   */\n      add\n        /* \"#utility.yul\":3737:3756   */\n      swap1\n      pop\n        /* \"#utility.yul\":3396:3762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:4187   */\n    tag_29:\n        /* \"#utility.yul\":3934:3938   */\n      0x00\n        /* \"#utility.yul\":3972:3974   */\n      0x20\n        /* \"#utility.yul\":3961:3970   */\n      dup3\n        /* \"#utility.yul\":3957:3975   */\n      add\n        /* \"#utility.yul\":3949:3975   */\n      swap1\n      pop\n        /* \"#utility.yul\":4021:4030   */\n      dup2\n        /* \"#utility.yul\":4015:4019   */\n      dup2\n        /* \"#utility.yul\":4011:4031   */\n      sub\n        /* \"#utility.yul\":4007:4008   */\n      0x00\n        /* \"#utility.yul\":3996:4005   */\n      dup4\n        /* \"#utility.yul\":3992:4009   */\n      add\n        /* \"#utility.yul\":3985:4032   */\n      mstore\n        /* \"#utility.yul\":4049:4180   */\n      tag_83\n        /* \"#utility.yul\":4175:4179   */\n      dup2\n        /* \"#utility.yul\":4049:4180   */\n      tag_45\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":4041:4180   */\n      swap1\n      pop\n        /* \"#utility.yul\":3768:4187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c845d8bde21cb080ffd6013d2ebdb9f5418a3054aece78e33a608279da33e19864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_40": {
									"entryPoint": 37,
									"id": 40,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b6100e2565b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6105cb806100f16000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806379ba5097146100515780638da5cb5b1461006f578063d4ee1d901461008d578063f2fde38b146100ab575b600080fd5b6100596100c7565b60405161006691906103d7565b60405180910390f35b6100776102a0565b6040516100849190610433565b60405180910390f35b6100956102c4565b6040516100a29190610433565b60405180910390f35b6100c560048036038101906100c0919061047f565b6102ea565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015090610509565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f90610575565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008115159050919050565b6103d1816103bc565b82525050565b60006020820190506103ec60008301846103c8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041d826103f2565b9050919050565b61042d81610412565b82525050565b60006020820190506104486000830184610424565b92915050565b600080fd5b61045c81610412565b811461046757600080fd5b50565b60008135905061047981610453565b92915050565b6000602082840312156104955761049461044e565b5b60006104a38482850161046a565b91505092915050565b600082825260208201905092915050565b7f4552525f4f4e4c595f4e45575f4f574e45520000000000000000000000000000600082015250565b60006104f36012836104ac565b91506104fe826104bd565b602082019050919050565b60006020820190508181036000830152610522816104e6565b9050919050565b7f4552525f415554484f52495a45445f414444524553535f4f4e4c590000000000600082015250565b600061055f601b836104ac565b915061056a82610529565b602082019050919050565b6000602082019050818103600083015261058e81610552565b905091905056fea2646970667358221220c845d8bde21cb080ffd6013d2ebdb9f5418a3054aece78e33a608279da33e19864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x5CB DUP1 PUSH2 0xF1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36F SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42D DUP2 PUSH2 0x412 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x412 JUMP JUMPDEST DUP2 EQ PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x479 DUP2 PUSH2 0x453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x495 JUMPI PUSH2 0x494 PUSH2 0x44E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A3 DUP5 DUP3 DUP6 ADD PUSH2 0x46A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552525F4F4E4C595F4E45575F4F574E45520000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 PUSH1 0x12 DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP2 POP PUSH2 0x4FE DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x522 DUP2 PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552525F415554484F52495A45445F414444524553535F4F4E4C590000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F PUSH1 0x1B DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP2 POP PUSH2 0x56A DUP3 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58E DUP2 PUSH2 0x552 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 GASLIMIT 0xD8 0xBD 0xE2 SHR 0xB0 DUP1 SELFDESTRUCT 0xD6 ADD RETURNDATASIZE 0x2E 0xBD 0xB9 CREATE2 COINBASE DUP11 ADDRESS SLOAD 0xAE 0xCE PUSH25 0xE33A608279DA33E19864736F6C634300081300330000000000 ",
							"sourceMap": "570:1260:0:-:0;;;860:72;;;;;;;;;;885:39;912:10;885:18;;;:39;;:::i;:::-;570:1260;;940:142;1044:5;1016:34;;1037:5;;;;;;;;;;1016:34;;;;;;;;;;;;1069:5;1061;;:13;;;;;;;;;;;;;;;;;;940:142;:::o;570:1260::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@acceptOwnership_101": {
									"entryPoint": 199,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@newOwner_6": {
									"entryPoint": 708,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_4": {
									"entryPoint": 672,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_66": {
									"entryPoint": 746,
									"id": 66,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4190:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "49:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "70:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "41:7:1",
														"type": ""
													}
												],
												"src": "7:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "162:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "172:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "172:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "150:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "157:3:1",
														"type": ""
													}
												],
												"src": "103:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "310:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "320:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "343:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "418:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "282:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "305:4:1",
														"type": ""
													}
												],
												"src": "218:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "479:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "489:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "461:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "471:7:1",
														"type": ""
													}
												],
												"src": "434:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:1",
														"type": ""
													}
												],
												"src": "566:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "774:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "805:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "779:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "767:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "745:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "752:3:1",
														"type": ""
													}
												],
												"src": "676:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "938:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "948:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "960:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "948:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1044:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1057:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1068:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "984:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "984:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "910:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "922:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "933:4:1",
														"type": ""
													}
												],
												"src": "824:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1124:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1134:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1144:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1117:6:1",
														"type": ""
													}
												],
												"src": "1084:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1254:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1271:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1264:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1165:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1377:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1394:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1397:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1387:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1387:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1288:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1527:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1536:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1539:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1529:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1529:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1529:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1485:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1518:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1492:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1492:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1482:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1482:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:51:1"
															},
															"nodeType": "YulIf",
															"src": "1472:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1455:5:1",
														"type": ""
													}
												],
												"src": "1411:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1625:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1647:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1625:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1698:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1663:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1663:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1663:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1593:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1609:5:1",
														"type": ""
													}
												],
												"src": "1555:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1836:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1838:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1838:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1838:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1811:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1820:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1807:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1832:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1803:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:32:1"
															},
															"nodeType": "YulIf",
															"src": "1800:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1929:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1944:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1948:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1973:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2016:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2027:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2012:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2012:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2036:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1983:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1983:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1973:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1760:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1771:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1783:6:1",
														"type": ""
													}
												],
												"src": "1716:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2163:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2180:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2185:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2201:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2220:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2201:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2135:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2140:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2151:11:1",
														"type": ""
													}
												],
												"src": "2067:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2348:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2378:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:14:1"
																	},
																	{
																		"hexValue": "4552525f4f4e4c595f4e45575f4f574e4552",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2382:20:1",
																		"type": "",
																		"value": "ERR_ONLY_NEW_OWNER"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2340:6:1",
														"type": ""
													}
												],
												"src": "2242:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2638:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2579:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2572:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2744:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643",
																	"nodeType": "YulIdentifier",
																	"src": "2655:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2757:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2768:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2550:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2558:3:1",
														"type": ""
													}
												],
												"src": "2416:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2959:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2969:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2969:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3027:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3012:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3035:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3041:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3005:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3061:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3195:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3069:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3069:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3061:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2939:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2954:4:1",
														"type": ""
													}
												],
												"src": "2788:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3319:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3341:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3349:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3337:14:1"
																	},
																	{
																		"hexValue": "4552525f415554484f52495a45445f414444524553535f4f4e4c59",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3353:29:1",
																		"type": "",
																		"value": "ERR_AUTHORIZED_ADDRESS_ONLY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3330:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3311:6:1",
														"type": ""
													}
												],
												"src": "3213:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3542:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3552:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3618:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3623:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3559:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3552:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3724:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782",
																	"nodeType": "YulIdentifier",
																	"src": "3635:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3737:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3748:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3744:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3530:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3538:3:1",
														"type": ""
													}
												],
												"src": "3396:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3939:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3949:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3949:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4007:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3992:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4015:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4021:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3985:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3985:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4041:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4175:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4049:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4041:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3919:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3934:4:1",
														"type": ""
													}
												],
												"src": "3768:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERR_ONLY_NEW_OWNER\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERR_AUTHORIZED_ADDRESS_ONLY\")\n\n    }\n\n    function abi_encode_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806379ba5097146100515780638da5cb5b1461006f578063d4ee1d901461008d578063f2fde38b146100ab575b600080fd5b6100596100c7565b60405161006691906103d7565b60405180910390f35b6100776102a0565b6040516100849190610433565b60405180910390f35b6100956102c4565b6040516100a29190610433565b60405180910390f35b6100c560048036038101906100c0919061047f565b6102ea565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015090610509565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f90610575565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008115159050919050565b6103d1816103bc565b82525050565b60006020820190506103ec60008301846103c8565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041d826103f2565b9050919050565b61042d81610412565b82525050565b60006020820190506104486000830184610424565b92915050565b600080fd5b61045c81610412565b811461046757600080fd5b50565b60008135905061047981610453565b92915050565b6000602082840312156104955761049461044e565b5b60006104a38482850161046a565b91505092915050565b600082825260208201905092915050565b7f4552525f4f4e4c595f4e45575f4f574e45520000000000000000000000000000600082015250565b60006104f36012836104ac565b91506104fe826104bd565b602082019050919050565b60006020820190508181036000830152610522816104e6565b9050919050565b7f4552525f415554484f52495a45445f414444524553535f4f4e4c590000000000600082015250565b600061055f601b836104ac565b915061056a82610529565b602082019050919050565b6000602082019050818103600083015261058e81610552565b905091905056fea2646970667358221220c845d8bde21cb080ffd6013d2ebdb9f5418a3054aece78e33a608279da33e19864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x2A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x2C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x2EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150 SWAP1 PUSH2 0x509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36F SWAP1 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x3F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42D DUP2 PUSH2 0x412 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x448 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x424 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x45C DUP2 PUSH2 0x412 JUMP JUMPDEST DUP2 EQ PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x479 DUP2 PUSH2 0x453 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x495 JUMPI PUSH2 0x494 PUSH2 0x44E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A3 DUP5 DUP3 DUP6 ADD PUSH2 0x46A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552525F4F4E4C595F4E45575F4F574E45520000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 PUSH1 0x12 DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP2 POP PUSH2 0x4FE DUP3 PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x522 DUP2 PUSH2 0x4E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552525F415554484F52495A45445F414444524553535F4F4E4C590000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55F PUSH1 0x1B DUP4 PUSH2 0x4AC JUMP JUMPDEST SWAP2 POP PUSH2 0x56A DUP3 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x58E DUP2 PUSH2 0x552 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 GASLIMIT 0xD8 0xBD 0xE2 SHR 0xB0 DUP1 SELFDESTRUCT 0xD6 ADD RETURNDATASIZE 0x2E 0xBD 0xB9 CREATE2 COINBASE DUP11 ADDRESS SLOAD 0xAE 0xCE PUSH25 0xE33A608279DA33E19864736F6C634300081300330000000000 ",
							"sourceMap": "570:1260:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:266;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;629:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1441:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:266;1606:4;1645:8;;;;;;;;;;;1631:22;;:10;:22;;;1623:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1695:8;;;;;;;;;;;1687:5;;:16;;;;;;;;;;;;;;;;;;1747:8;;;;;;;;;;;1719:37;;1740:5;;;;;;;;;;1719:37;;;;;;;;;;;;1794:1;1767:8;;:30;;;;;;;;;;;;;;;;;;1815:4;1808:11;;1561:266;:::o;594:28::-;;;;;;;;;;;;:::o;629:31::-;;;;;;;;;;;;;:::o;1441:112::-;1224:10;1215:19;;:5;;;;;;;;;;:19;;;1207:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1536:9:::1;1525:8;;:20;;;;;;;;;;;;;;;;;;1441:112:::0;:::o;7:90:1:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:104::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;566:104;;;:::o;676:142::-;779:32;805:5;779:32;:::i;:::-;774:3;767:45;676:142;;:::o;824:254::-;933:4;971:2;960:9;956:18;948:26;;984:87;1068:1;1057:9;1053:17;1044:6;984:87;:::i;:::-;824:254;;;;:::o;1165:117::-;1274:1;1271;1264:12;1411:138;1492:32;1518:5;1492:32;:::i;:::-;1485:5;1482:43;1472:71;;1539:1;1536;1529:12;1472:71;1411:138;:::o;1555:155::-;1609:5;1647:6;1634:20;1625:29;;1663:41;1698:5;1663:41;:::i;:::-;1555:155;;;;:::o;1716:345::-;1783:6;1832:2;1820:9;1811:7;1807:23;1803:32;1800:119;;;1838:79;;:::i;:::-;1800:119;1958:1;1983:61;2036:7;2027:6;2016:9;2012:22;1983:61;:::i;:::-;1973:71;;1929:125;1716:345;;;;:::o;2067:169::-;2151:11;2185:6;2180:3;2173:19;2225:4;2220:3;2216:14;2201:29;;2067:169;;;;:::o;2242:168::-;2382:20;2378:1;2370:6;2366:14;2359:44;2242:168;:::o;2416:366::-;2558:3;2579:67;2643:2;2638:3;2579:67;:::i;:::-;2572:74;;2655:93;2744:3;2655:93;:::i;:::-;2773:2;2768:3;2764:12;2757:19;;2416:366;;;:::o;2788:419::-;2954:4;2992:2;2981:9;2977:18;2969:26;;3041:9;3035:4;3031:20;3027:1;3016:9;3012:17;3005:47;3069:131;3195:4;3069:131;:::i;:::-;3061:139;;2788:419;;;:::o;3213:177::-;3353:29;3349:1;3341:6;3337:14;3330:53;3213:177;:::o;3396:366::-;3538:3;3559:67;3623:2;3618:3;3559:67;:::i;:::-;3552:74;;3635:93;3724:3;3635:93;:::i;:::-;3753:2;3748:3;3744:12;3737:19;;3396:366;;;:::o;3768:419::-;3934:4;3972:2;3961:9;3957:18;3949:26;;4021:9;4015:4;4011:20;4007:1;3996:9;3992:17;3985:47;4049:131;4175:4;4049:131;:::i;:::-;4041:139;;3768:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "296600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "58975",
								"newOwner()": "2536",
								"owner()": "2511",
								"transferOwnership(address)": "26933"
							},
							"internal": {
								"_transferOwnership(address payable)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 860,
									"end": 932,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 860,
									"end": 932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 860,
									"end": 932,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 860,
									"end": 932,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 912,
									"end": 922,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 885,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 885,
									"end": 903,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 903,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 885,
									"end": 924,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 885,
									"end": 924,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 885,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 885,
									"end": 924,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 885,
									"end": 924,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 1082,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 1082,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1037,
									"end": 1042,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1016,
									"end": 1050,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1069,
									"end": 1074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1066,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1061,
									"end": 1074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 1082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 1082,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 1830,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c845d8bde21cb080ffd6013d2ebdb9f5418a3054aece78e33a608279da33e19864736f6c63430008130033",
									".code": [
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "79BA5097"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "D4EE1D90"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 570,
											"end": 1830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1561,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1561,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 594,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 594,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 629,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 629,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1441,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1441,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1645,
											"end": 1653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1641,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1623,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1623,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1747,
											"end": 1755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1756,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1775,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1767,
											"end": 1775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1819,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 629,
											"end": 660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 629,
											"end": 660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1234,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1234,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1207,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1207,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1525,
											"end": 1533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1545,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 566,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 566,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 818,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 676,
											"end": 818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 779,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 805,
											"end": 810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 779,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 779,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 779,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 779,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 767,
											"end": 812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 824,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 824,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 933,
											"end": 937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 956,
											"end": 974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 948,
											"end": 974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1068,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 984,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 984,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 824,
											"end": 1078,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 824,
											"end": 1078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 824,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 824,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 824,
											"end": 1078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1282,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1165,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1549,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1411,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1492,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1492,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1525,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1654,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1663,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1663,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1830,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1835,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1800,
											"end": 1919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1838,
											"end": 1917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1838,
											"end": 1917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1917,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1838,
											"end": 1917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1800,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2036,
											"end": 2043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1983,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 2061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2067,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2242,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2402,
											"name": "PUSH",
											"source": 1,
											"value": "4552525F4F4E4C595F4E45575F4F574E45520000000000000000000000000000"
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2643,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2638,
											"end": 2641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2579,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2655,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2788,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3195,
											"end": 3199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3069,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3069,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3390,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3213,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3353,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "4552525F415554484F52495A45445F414444524553535F4F4E4C590000000000"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3762,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3396,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3623,
											"end": 3625,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3618,
											"end": 3621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3559,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3626,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3559,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3635,
											"end": 3728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3728,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3635,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3396,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 4187,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3768,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3974,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3961,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3957,
											"end": 3975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 3975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4031,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3992,
											"end": 4009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4175,
											"end": 4179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4049,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4180,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4049,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 4187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 4187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 4187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 4187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/TreasuryContract/lib/Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TreasuryContract/lib/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TreasuryContract/lib/Ownable.sol\":{\"keccak256\":\"0xb288e2547439a280624a8e22e821244801ede1d5eb6b0d8f6da510b4ca7c61c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://704ab2ae8692ace7f1f8c7ebfb6b941dfe0510dd3e6f638d3af8454f0eb6cea0\",\"dweb:/ipfs/QmbRV7rWBKTJLMCvpEKdAbmKx2JCEqZi5C42sKujFBZfw2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/TreasuryContract/lib/Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 6,
								"contract": "contracts/TreasuryContract/lib/Ownable.sol:Ownable",
								"label": "newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/TreasuryContract/lib/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/TreasuryContract/lib/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "63:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "Ownable",
							"nameLocation": "579:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 4,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "617:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "594:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "594:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4ee1d90",
									"id": 6,
									"mutability": "mutable",
									"name": "newOwner",
									"nameLocation": "652:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "629:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "629:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 12,
									"name": "OwnershipTransferred",
									"nameLocation": "675:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "712:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "696:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "743:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "727:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:57:0"
									},
									"src": "669:84:0"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "874:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 19,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "912:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "916:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "912:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "904:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 17,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "904:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "904:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 16,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "885:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "885:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "885:39:0"
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "761:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "871:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 102,
									"src": "860:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1000:82:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 31,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1037:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 32,
															"name": "_whom",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1044:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 30,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1016:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "EmitStatement",
												"src": "1011:39:0"
											},
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1061:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "_whom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1069:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1061:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1061:13:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "949:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_whom",
												"nameLocation": "984:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "968:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:23:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:0:0"
									},
									"scope": 102,
									"src": "940:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1196:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 44,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 45,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1224:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1228:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1224:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1215:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552525f415554484f52495a45445f414444524553535f4f4e4c59",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1236:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782",
																"typeString": "literal_string \"ERR_AUTHORIZED_ADDRESS_ONLY\""
															},
															"value": "ERR_AUTHORIZED_ADDRESS_ONLY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0651d8e9a8ae0635726dbf5cb7c1faad8792aaf6a248891d0c4ad51839cc8782",
																"typeString": "literal_string \"ERR_AUTHORIZED_ADDRESS_ONLY\""
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1207:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "1207:59:0"
											},
											{
												"id": 51,
												"nodeType": "PlaceholderStatement",
												"src": "1277:1:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1090:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 53,
									"name": "onlyOwner",
									"nameLocation": "1184:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:2:0"
									},
									"src": "1175:111:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1514:39:0",
										"statements": [
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1525:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1536:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1525:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1525:20:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1294:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyOwner",
												"nameLocations": [
													"1504:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 53,
												"src": "1504:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1504:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1450:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1484:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1468:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1467:27:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1514:0:0"
									},
									"scope": 102,
									"src": "1441:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1612:215:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 72,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1631:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1635:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1631:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 74,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1645:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1631:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552525f4f4e4c595f4e45575f4f574e4552",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1655:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643",
																"typeString": "literal_string \"ERR_ONLY_NEW_OWNER\""
															},
															"value": "ERR_ONLY_NEW_OWNER"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf791f4e79ca57e8f27ae9430d4689b69ddaea5388da56ec72be5588788c6643",
																"typeString": "literal_string \"ERR_ONLY_NEW_OWNER\""
															}
														],
														"id": 71,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1623:53:0"
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 79,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1687:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 80,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1695:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1687:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1687:16:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 84,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 85,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "1747:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 83,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1719:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1719:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "EmitStatement",
												"src": "1714:42:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 88,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1767:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1794:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 91,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1786:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1786:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1778:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 89,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1778:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1778:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1767:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1767:30:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1815:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 70,
												"id": 99,
												"nodeType": "Return",
												"src": "1808:11:0"
											}
										]
									},
									"functionSelector": "79ba5097",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1570:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1606:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:6:0"
									},
									"scope": 102,
									"src": "1561:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 103,
							"src": "570:1260:0",
							"usedErrors": []
						}
					],
					"src": "35:1797:0"
				},
				"id": 0
			}
		}
	}
}